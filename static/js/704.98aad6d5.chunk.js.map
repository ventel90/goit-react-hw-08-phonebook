{"version":3,"file":"static/js/704.98aad6d5.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/Form/Form.styled.jsx","components/Contact/Contacts.styled.jsx","components/Contact/Contact.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  MdMail,\n  MdPassword,\n} from 'react-icons/md';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 15px;\n  color: gray\n  padding-top: 10px;\n`;\nexport const Forma = styled.form`\n background-color: white;\n  display: flex;\n  flex-direction: column;\n  background-color: fwite;\n  width: 350px;\n//   height: 100%;\n  margin: 0 auto;\n//   margin-bottom: auto;\n  margin-top: 10%;\n  padding: 35px;\n  border: solid 1px grey;\n  border-radius: 2.5px;\n  box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.5);\n//    position: absolute;             \n//    top: 50%;                        \n//    transform: translate(0, -50%) } \n`;\nexport const Button = styled.button`\n  display: inline-block;\n  // max-width: 30%;\n  width: 100%;\n  height: 35px;\n  color: white;\n  border-radius: 2.5px;\n  background: #26b9ff;\n  margin-top: 45px;\n  //   margin-bottom: 25px;\n  border: solid 1px black;\n  transition: all 300ms linear;\n  cursor: pointer;\n  font-size: 20px;\n  :hover {\n    background-color: #26d7ff;\n    color: white;\n    border: solid 1px grey;\n  }\n`;\nexport const Text = styled.p`\n  text-align: center;\n  width: 95%;\n  padding: 20px;\n  font-size: 18px;\n//   color: #26b9ff;\n//   font-weight: 400;\n  margin: 0;\n`;\n\nexport const Email = styled(MdMail)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const Password = styled(MdPassword)`\n  width: 20px;\n  height: 20px;\n`;","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport {\n  MdOutlineContacts,\n  MdOutlinePermContactCalendar,\n  MdMail,\n  MdPassword,\n} from 'react-icons/md';\n\n\nexport const Img = styled(MdOutlineContacts)`\n  display: block;\n  margin: 0 auto;\n  height: 65px;\n  width: 75px;\n  color: #26b9ff;\n`;\nexport const Title = styled.p`\n  text-align: center;\n  width: 95%;\n//   height:100%;\n  padding: 10px;\n  font-size: 32px;\n  color: #26b9ff;\n  font-weight: 400;\n  margin: 0;\n`;\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  font-size: 15px;\n  color: #26b9ff;\n  font-weight: 400;\n  margin: 0;\n`;\nexport const Container = styled.div`\n display: flex;\n  justify-content: center;\n  align-items: center;`\n\nexport const Src = styled.svg`\n  width: 20px;\n  height: 20px;\n  margin-left: 12px;\n  margin-right: 12px;\n  color: red;\n//   border: 2px dashed #2a2a2a;\n//   border-radius: 8px;\n//   fill: #2a2a2a;\n//   color: black;\nviewBox: 0 0 32 32\n position: absolute;\ntop: 50px;\nleft: 12px;\ntransform: translateY(50%)\n`;\nexport const InputContainer = styled.span`\n  position: relative;\n   //   height: 100%;\n  //   widtt: 100%;\n  margin-bottom: 8px;\n  margin: 0;\n  &:focus {\n    color: #0c86f7;\n  }\n`;\nexport const Input = styled.input`\n  padding: 15px;\n  width: 100%;\n  max-height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  padding-left: 35px;\n  display: flex;\n  box-sizing: border-box;\n  outline: none;\n  color: #0c86f7;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n \n    &:focus {\n      border: 1px solid #0c86f7;\n    }\n`;\n\nexport const Name = styled(MdOutlinePermContactCalendar)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const Email = styled(MdMail)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const Password = styled(MdPassword)`\n  width: 20px;\n  height: 20px;\n`;","import styled from '@emotion/styled';\nimport {\n  MdOutlinePermContactCalendar,\n  MdOutlinePhoneIphone,\n} from 'react-icons/md';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  color: #26d7ff;\n`;\nexport const Button = styled.button`\ndisplay:inline-block;\nmax-width: 61%;\nheight: 25px;\nborder-radius: 3px;\nborder: solid 1px black;\ntransition: all 300ms linear;\ncursor: pointer;\n\n  :hover {\n     :hover {\n    background-color: #26d7ff;\n    color: white;\n    border: solid 1px grey;\n  }\n`;\nexport const Input = styled.input`\n  width: 59%;\n  height: 25px;\nmargin-top: 10px;\nmargin-bottom: 15px;\n    }\n`;\n\nexport const Message = styled.p`\n  display: inline-block;\n  padding-right: 8px;\n  float: left;\n  font-size: 21px;\n  text-align: left;\n  color: black;\n  width: 80%;\n  margin: 0;\n`;\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  background-color: fwite;\n  width: 350px;\n  height: 50%;\n  margin: 0 auto;\n  margin-bottom: 0;\n//   margin-top: 50px;\n  padding: 25px;\n  //   border: solid 1px grey;\n  //   border-radius: 2.5px;\n  //   box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.5);\n  //\n`;\n\n    \nexport const FormContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  position: absolut;\n  width: 30%;\n  height: 100vh;\n  margin-right: 0;\n  padding-top: 50px;\n  border-right: 1px solid black;\n//   position: fixed;\n`;\n\nexport const Name = styled(MdOutlinePermContactCalendar)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const Phone = styled(MdOutlinePhoneIphone)`\n  width: 20px;\n  height: 20px;\n`;\n","import styled from '@emotion/styled';\nexport const ContactsList = styled.ul`\n  margin-left: 20px;\n  margin-top: 25px;\n  border: 1px solid blsck;\n  list-style-type: none;\n  padding-left: 20px\n   width: 90%;\n\n`;\nexport const ContactsItem = styled.li`\n  text-align: end;\n  margin-bottom: 8px;\n  width: 100%;\n  padding-bottom: 10px;\n  margin: 0;\n  height: 100%;\n`;\nexport const Message = styled.p`\n  color: white;\n  font-size: 25px;\n`;\nexport const MessageText = styled.p`\n  display: inline-block;\n  padding: 0 30px;\n  float: left;\n  font-size: 25px;\n  text-align: left;\n  color: #26b9ff;\n  width: 100%;\n  margin: 0;\n`;\nexport const ContactContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-right: auto;\n  padding-top: 15px;\n  justify-content: flex-end;\n`;\nexport const Avatar = styled.div`\n  min-width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n//   background: #26b9ff;\n  background: ${getRandomHexColor};\n  border-radius: 50%;\n  border: 1px solid black;\n`;\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\nexport const Title = styled.p`\n  text-align: center;\n  width: 100%;\n  padding: 10px;\n  font-size: 32px;\n  color: #26b9ff;\n  font-weight: 400;\n  margin-bottom: 50px;\n`;\nfunction getRandomHexColor() {\n//   return `#${Math.floor(Math.random() * 176543  ).toString(16)}`;\nreturn  '#' + (((1 + Math.random()) * (1 << 24)) | 0).toString(16).substr(-6);\n}\n","import { Button } from 'components/Form/Form.styled';\nimport {\n  useDeleteContactsMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contacts-operation';\nimport {\n  Title,\n  Avatar,\n  ContactContainer,\n  ContactsItem,\n  ContactsList,\n  Container,\n  Message,\n  MessageText,\n} from './Contacts.styled';\n\nconst Contact = ({ filter }) => {\n\n  const { data = [] } = useGetContactsQuery();\n  const [removeContact] = useDeleteContactsMutation();\n  const normalizedFilter = filter.toLowerCase();\n  const contacts = data.filter(contact => {\n    return contact.name.toLowerCase().includes(normalizedFilter);\n  });\n\n  const handleDeleteContact = async id => {\n    await removeContact(id);\n    };\n    \n  return (\n    <ContactContainer>\n      {contacts.length > 0 ? (\n        <ContactsList>\n          <Title>CONTACTS</Title>\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <ContactsItem key={id}>\n                <Container>\n                  <Avatar>\n                    <Message color=\"white\"> {name[0]}</Message>\n                  </Avatar>\n                  <MessageText>{name}:</MessageText>\n                  <MessageText>{number}</MessageText>\n                  <Button onClick={() => handleDeleteContact(id)} type=\"button\">\n                    Delete\n                  </Button>\n                </Container>\n              </ContactsItem>\n            );\n          })}\n        </ContactsList>\n      ) : (\n        <Title>No contacts yet...</Title>\n      )}\n    </ContactContainer>\n  );\n};\nexport default Contact;\n","import styled from '@emotion/styled';\nimport { MdPersonSearch } from 'react-icons/md';\n\nexport const Filters = styled.form`\nmargin-left: 25px\n`;\nexport const Input = styled.input`\n  margin-top: 10px;\n  margin-left: 25px;\n  height: 25px;\n  width: 50%;\n`;\nexport const FineContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 33%;\n  height: 100%;\n  margin-right: 30px;\n  padding-top: 15px;\n  justify-content: flex-end;\n//   position: fixed;\n`;\n\nexport const Search = styled(MdPersonSearch)`\n  width: 20px;\n  height: 20px;\n`;\n","import { InputContainer } from 'components/RegisterForm/RegisterForm.styled';\nimport { Filters, FineContainer, Search } from './Filter.styled';\nimport { Label } from 'components/Form/Form.styled';\n\nconst Filter = ({ onChange, value }) => {\n  return (\n    <FineContainer>\n      <Filters>\n        <InputContainer>\n          <Label>\n            Find contacts by name\n            <input\n              className=\"input__form-input\"\n              type=\"text\"\n              onChange={onChange}\n              name=\"filter\"\n              value={value}\n            ></input>\n            <span className=\"span__icon-container\">\n              <Search className=\"icon\"/>\n            </span>\n          </Label>\n        </InputContainer>\n      </Filters>\n    </FineContainer>\n  );\n};\n\nexport default Filter;\n","import { Label, Forma, FormContainer, Name, Phone } from './Form.styled';\nimport { useState } from 'react';\nimport {\n  useAddContactsMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contacts-operation';\n\nimport {\n  InputContainer,\n  Title,\n} from 'components/RegisterForm/RegisterForm.styled';\nimport { Button } from '../LoginForm/LoginForm.styled';\n\nexport function Form() {\n  const [addContact] = useAddContactsMutation();\n    const { data } = useGetContactsQuery();\n   const handleSubmit = async e => {\n    e.preventDefault();\n    reset();\n    const x =  await addContact({ name: name, number: number });\n      console.log(x);\n  };\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n    data.forEach(contact => {\n      const { name, number } = contact;\n      if (number === value) {\n        alert(`${name} is already in contacts`);\n        reset();\n      }\n    });\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer>\n      <Title>Create new contact</Title>\n      <Forma onSubmit={handleSubmit}>\n        <InputContainer>\n          <Label>\n            Name\n            <input\n              className=\"input__form-input\"\n              name=\"name\"\n              value={name}\n              onChange={handleInputChange}\n              type=\"text\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <span className=\"span__icon-container\">\n              <Name className=\"icon\"/>\n            </span>\n          </Label>\n        </InputContainer>\n        <InputContainer>\n          <Label>\n            Number\n            <input\n              className=\"input__form-input\"\n              name=\"number\"\n              value={number}\n              onChange={handleInputChange}\n              type=\"tel\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <span className=\"span__icon-container\">\n              <Phone className=\"icon\"/>\n            </span>\n          </Label>\n        </InputContainer>\n        <Button type=\"submit\">Add contact</Button>\n      </Forma>\n    </FormContainer>\n  );\n}\nexport default Form;\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n//   width: 100vh;\n//   height: 100%;\n//   margin-right: 30px;\n//   padding-top: 15px;\n//   justify-content: flex-end;\n`;","// import Contact from \"components/Contact/Contact\";\nimport Contact from \"components/Contact/Contact\";\nimport Filter from \"components/Filter/Filter\";\nimport Form from \"components/Form/Form\";\nimport { useState } from \"react\";\nimport { Container } from \"./Contacts.styled\";\n\n\n\n\n\nconst Contacts = () => {\n     const [filter, setFilter] = useState('');\n    return (\n      <>\n        <Container>\n          {<Form />}\n          {<Contact filter={filter} />}\n          {<Filter value={filter} onChange={e => setFilter(e.target.value)} />}\n        </Container>\n      </>\n    );\n};\nexport default Contacts;"],"names":["Label","styled","Forma","Button","Text","Email","MdMail","Password","MdPassword","Img","MdOutlineContacts","Title","StyledLink","NavLink","Container","InputContainer","Name","MdOutlinePermContactCalendar","FormContainer","Phone","MdOutlinePhoneIphone","ContactsList","ContactsItem","Message","MessageText","ContactContainer","Avatar","Math","random","toString","substr","filter","useGetContactsQuery","data","useDeleteContactsMutation","removeContact","normalizedFilter","toLowerCase","contacts","contact","name","includes","handleDeleteContact","id","length","map","number","color","onClick","type","Filters","FineContainer","Search","MdPersonSearch","onChange","value","className","useAddContactsMutation","addContact","handleSubmit","e","preventDefault","reset","x","console","log","useState","setName","setNumber","handleInputChange","currentTarget","forEach","alert","onSubmit","pattern","title","required","setFilter","target"],"sourceRoot":""}